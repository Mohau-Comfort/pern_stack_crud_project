{
  "openapi": "3.0.0",
  "info": {
    "title": "PERN Stack CRUD API",
    "description": "API documentation for PERN Stack CRUD application",
    "version": "1.0.0",
    "contact": {
      "name": "API Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Clients",
      "description": "API for clients in the system"
    }
  ],
  "paths": {
    "/api/clients": {
      "get": {
        "tags": ["Clients"],
        "summary": "Get all clients",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Clients"],
        "summary": "Create a new client",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields"
          },
          "409": {
            "description": "Conflict - email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/clients/{id}": {
      "get": {
        "tags": ["Clients"],
        "summary": "Get client by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the client to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Clients"],
        "summary": "Update an existing client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the client to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields or invalid status"
          },
          "404": {
            "description": "Client not found"
          },
          "409": {
            "description": "Conflict - email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["Clients"],
        "summary": "Delete a client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the client to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Client deleted successfully"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Tom Cruise"
          },
          "email": {
            "type": "string",
            "example": "tom@email.com"
          },
          "job": {
            "type": "string",
            "example": "Software Engineer"
          },
          "rate": {
            "type": "string",
            "example": "$150/hr"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Inactive", "Available"],
            "example": "Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClientInput": {
        "type": "object",
        "required": ["name", "email", "job", "rate", "status"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Tom Cruise"
          },
          "email": {
            "type": "string",
            "example": "tom@email.com"
          },
          "job": {
            "type": "string",
            "example": "Software Engineer"
          },
          "rate": {
            "type": "string",
            "example": "$150/hr"
          },
          "status": {
            "type": "string",
            "enum": ["Active", "Inactive", "Available"],
            "example": "Active"
          }
        }
      }
    }
  }
}